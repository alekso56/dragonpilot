#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1356256294732298968) {
   out_1356256294732298968[0] = 0;
   out_1356256294732298968[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1356256294732298968[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1356256294732298968[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1356256294732298968[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1356256294732298968[5] = -sin(in_vec[1]);
   out_1356256294732298968[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1356256294732298968[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1356256294732298968[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1356256294732298968[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1356256294732298968[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1356256294732298968[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1356256294732298968[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1356256294732298968[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1356256294732298968[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1356256294732298968[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1356256294732298968[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1356256294732298968[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_3067371793495545137) {
   out_3067371793495545137[0] = delta_x[0] + nom_x[0];
   out_3067371793495545137[1] = delta_x[1] + nom_x[1];
   out_3067371793495545137[2] = delta_x[2] + nom_x[2];
   out_3067371793495545137[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_3067371793495545137[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_3067371793495545137[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_3067371793495545137[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_3067371793495545137[7] = delta_x[6] + nom_x[7];
   out_3067371793495545137[8] = delta_x[7] + nom_x[8];
   out_3067371793495545137[9] = delta_x[8] + nom_x[9];
   out_3067371793495545137[10] = delta_x[9] + nom_x[10];
   out_3067371793495545137[11] = delta_x[10] + nom_x[11];
   out_3067371793495545137[12] = delta_x[11] + nom_x[12];
   out_3067371793495545137[13] = delta_x[12] + nom_x[13];
   out_3067371793495545137[14] = delta_x[13] + nom_x[14];
   out_3067371793495545137[15] = delta_x[14] + nom_x[15];
   out_3067371793495545137[16] = delta_x[15] + nom_x[16];
   out_3067371793495545137[17] = delta_x[16] + nom_x[17];
   out_3067371793495545137[18] = delta_x[17] + nom_x[18];
   out_3067371793495545137[19] = delta_x[18] + nom_x[19];
   out_3067371793495545137[20] = delta_x[19] + nom_x[20];
   out_3067371793495545137[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5834301181090248469) {
   out_5834301181090248469[0] = -nom_x[0] + true_x[0];
   out_5834301181090248469[1] = -nom_x[1] + true_x[1];
   out_5834301181090248469[2] = -nom_x[2] + true_x[2];
   out_5834301181090248469[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5834301181090248469[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5834301181090248469[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5834301181090248469[6] = -nom_x[7] + true_x[7];
   out_5834301181090248469[7] = -nom_x[8] + true_x[8];
   out_5834301181090248469[8] = -nom_x[9] + true_x[9];
   out_5834301181090248469[9] = -nom_x[10] + true_x[10];
   out_5834301181090248469[10] = -nom_x[11] + true_x[11];
   out_5834301181090248469[11] = -nom_x[12] + true_x[12];
   out_5834301181090248469[12] = -nom_x[13] + true_x[13];
   out_5834301181090248469[13] = -nom_x[14] + true_x[14];
   out_5834301181090248469[14] = -nom_x[15] + true_x[15];
   out_5834301181090248469[15] = -nom_x[16] + true_x[16];
   out_5834301181090248469[16] = -nom_x[17] + true_x[17];
   out_5834301181090248469[17] = -nom_x[18] + true_x[18];
   out_5834301181090248469[18] = -nom_x[19] + true_x[19];
   out_5834301181090248469[19] = -nom_x[20] + true_x[20];
   out_5834301181090248469[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_5519691553496756147) {
   out_5519691553496756147[0] = 1.0;
   out_5519691553496756147[1] = 0;
   out_5519691553496756147[2] = 0;
   out_5519691553496756147[3] = 0;
   out_5519691553496756147[4] = 0;
   out_5519691553496756147[5] = 0;
   out_5519691553496756147[6] = 0;
   out_5519691553496756147[7] = 0;
   out_5519691553496756147[8] = 0;
   out_5519691553496756147[9] = 0;
   out_5519691553496756147[10] = 0;
   out_5519691553496756147[11] = 0;
   out_5519691553496756147[12] = 0;
   out_5519691553496756147[13] = 0;
   out_5519691553496756147[14] = 0;
   out_5519691553496756147[15] = 0;
   out_5519691553496756147[16] = 0;
   out_5519691553496756147[17] = 0;
   out_5519691553496756147[18] = 0;
   out_5519691553496756147[19] = 0;
   out_5519691553496756147[20] = 0;
   out_5519691553496756147[21] = 0;
   out_5519691553496756147[22] = 1.0;
   out_5519691553496756147[23] = 0;
   out_5519691553496756147[24] = 0;
   out_5519691553496756147[25] = 0;
   out_5519691553496756147[26] = 0;
   out_5519691553496756147[27] = 0;
   out_5519691553496756147[28] = 0;
   out_5519691553496756147[29] = 0;
   out_5519691553496756147[30] = 0;
   out_5519691553496756147[31] = 0;
   out_5519691553496756147[32] = 0;
   out_5519691553496756147[33] = 0;
   out_5519691553496756147[34] = 0;
   out_5519691553496756147[35] = 0;
   out_5519691553496756147[36] = 0;
   out_5519691553496756147[37] = 0;
   out_5519691553496756147[38] = 0;
   out_5519691553496756147[39] = 0;
   out_5519691553496756147[40] = 0;
   out_5519691553496756147[41] = 0;
   out_5519691553496756147[42] = 0;
   out_5519691553496756147[43] = 0;
   out_5519691553496756147[44] = 1.0;
   out_5519691553496756147[45] = 0;
   out_5519691553496756147[46] = 0;
   out_5519691553496756147[47] = 0;
   out_5519691553496756147[48] = 0;
   out_5519691553496756147[49] = 0;
   out_5519691553496756147[50] = 0;
   out_5519691553496756147[51] = 0;
   out_5519691553496756147[52] = 0;
   out_5519691553496756147[53] = 0;
   out_5519691553496756147[54] = 0;
   out_5519691553496756147[55] = 0;
   out_5519691553496756147[56] = 0;
   out_5519691553496756147[57] = 0;
   out_5519691553496756147[58] = 0;
   out_5519691553496756147[59] = 0;
   out_5519691553496756147[60] = 0;
   out_5519691553496756147[61] = 0;
   out_5519691553496756147[62] = 0;
   out_5519691553496756147[63] = 0;
   out_5519691553496756147[64] = 0;
   out_5519691553496756147[65] = 0;
   out_5519691553496756147[66] = -0.5*state[4];
   out_5519691553496756147[67] = -0.5*state[5];
   out_5519691553496756147[68] = -0.5*state[6];
   out_5519691553496756147[69] = 0;
   out_5519691553496756147[70] = 0;
   out_5519691553496756147[71] = 0;
   out_5519691553496756147[72] = 0;
   out_5519691553496756147[73] = 0;
   out_5519691553496756147[74] = 0;
   out_5519691553496756147[75] = 0;
   out_5519691553496756147[76] = 0;
   out_5519691553496756147[77] = 0;
   out_5519691553496756147[78] = 0;
   out_5519691553496756147[79] = 0;
   out_5519691553496756147[80] = 0;
   out_5519691553496756147[81] = 0;
   out_5519691553496756147[82] = 0;
   out_5519691553496756147[83] = 0;
   out_5519691553496756147[84] = 0;
   out_5519691553496756147[85] = 0;
   out_5519691553496756147[86] = 0;
   out_5519691553496756147[87] = 0.5*state[3];
   out_5519691553496756147[88] = 0.5*state[6];
   out_5519691553496756147[89] = -0.5*state[5];
   out_5519691553496756147[90] = 0;
   out_5519691553496756147[91] = 0;
   out_5519691553496756147[92] = 0;
   out_5519691553496756147[93] = 0;
   out_5519691553496756147[94] = 0;
   out_5519691553496756147[95] = 0;
   out_5519691553496756147[96] = 0;
   out_5519691553496756147[97] = 0;
   out_5519691553496756147[98] = 0;
   out_5519691553496756147[99] = 0;
   out_5519691553496756147[100] = 0;
   out_5519691553496756147[101] = 0;
   out_5519691553496756147[102] = 0;
   out_5519691553496756147[103] = 0;
   out_5519691553496756147[104] = 0;
   out_5519691553496756147[105] = 0;
   out_5519691553496756147[106] = 0;
   out_5519691553496756147[107] = 0;
   out_5519691553496756147[108] = -0.5*state[6];
   out_5519691553496756147[109] = 0.5*state[3];
   out_5519691553496756147[110] = 0.5*state[4];
   out_5519691553496756147[111] = 0;
   out_5519691553496756147[112] = 0;
   out_5519691553496756147[113] = 0;
   out_5519691553496756147[114] = 0;
   out_5519691553496756147[115] = 0;
   out_5519691553496756147[116] = 0;
   out_5519691553496756147[117] = 0;
   out_5519691553496756147[118] = 0;
   out_5519691553496756147[119] = 0;
   out_5519691553496756147[120] = 0;
   out_5519691553496756147[121] = 0;
   out_5519691553496756147[122] = 0;
   out_5519691553496756147[123] = 0;
   out_5519691553496756147[124] = 0;
   out_5519691553496756147[125] = 0;
   out_5519691553496756147[126] = 0;
   out_5519691553496756147[127] = 0;
   out_5519691553496756147[128] = 0;
   out_5519691553496756147[129] = 0.5*state[5];
   out_5519691553496756147[130] = -0.5*state[4];
   out_5519691553496756147[131] = 0.5*state[3];
   out_5519691553496756147[132] = 0;
   out_5519691553496756147[133] = 0;
   out_5519691553496756147[134] = 0;
   out_5519691553496756147[135] = 0;
   out_5519691553496756147[136] = 0;
   out_5519691553496756147[137] = 0;
   out_5519691553496756147[138] = 0;
   out_5519691553496756147[139] = 0;
   out_5519691553496756147[140] = 0;
   out_5519691553496756147[141] = 0;
   out_5519691553496756147[142] = 0;
   out_5519691553496756147[143] = 0;
   out_5519691553496756147[144] = 0;
   out_5519691553496756147[145] = 0;
   out_5519691553496756147[146] = 0;
   out_5519691553496756147[147] = 0;
   out_5519691553496756147[148] = 0;
   out_5519691553496756147[149] = 0;
   out_5519691553496756147[150] = 0;
   out_5519691553496756147[151] = 0;
   out_5519691553496756147[152] = 0;
   out_5519691553496756147[153] = 1.0;
   out_5519691553496756147[154] = 0;
   out_5519691553496756147[155] = 0;
   out_5519691553496756147[156] = 0;
   out_5519691553496756147[157] = 0;
   out_5519691553496756147[158] = 0;
   out_5519691553496756147[159] = 0;
   out_5519691553496756147[160] = 0;
   out_5519691553496756147[161] = 0;
   out_5519691553496756147[162] = 0;
   out_5519691553496756147[163] = 0;
   out_5519691553496756147[164] = 0;
   out_5519691553496756147[165] = 0;
   out_5519691553496756147[166] = 0;
   out_5519691553496756147[167] = 0;
   out_5519691553496756147[168] = 0;
   out_5519691553496756147[169] = 0;
   out_5519691553496756147[170] = 0;
   out_5519691553496756147[171] = 0;
   out_5519691553496756147[172] = 0;
   out_5519691553496756147[173] = 0;
   out_5519691553496756147[174] = 0;
   out_5519691553496756147[175] = 1.0;
   out_5519691553496756147[176] = 0;
   out_5519691553496756147[177] = 0;
   out_5519691553496756147[178] = 0;
   out_5519691553496756147[179] = 0;
   out_5519691553496756147[180] = 0;
   out_5519691553496756147[181] = 0;
   out_5519691553496756147[182] = 0;
   out_5519691553496756147[183] = 0;
   out_5519691553496756147[184] = 0;
   out_5519691553496756147[185] = 0;
   out_5519691553496756147[186] = 0;
   out_5519691553496756147[187] = 0;
   out_5519691553496756147[188] = 0;
   out_5519691553496756147[189] = 0;
   out_5519691553496756147[190] = 0;
   out_5519691553496756147[191] = 0;
   out_5519691553496756147[192] = 0;
   out_5519691553496756147[193] = 0;
   out_5519691553496756147[194] = 0;
   out_5519691553496756147[195] = 0;
   out_5519691553496756147[196] = 0;
   out_5519691553496756147[197] = 1.0;
   out_5519691553496756147[198] = 0;
   out_5519691553496756147[199] = 0;
   out_5519691553496756147[200] = 0;
   out_5519691553496756147[201] = 0;
   out_5519691553496756147[202] = 0;
   out_5519691553496756147[203] = 0;
   out_5519691553496756147[204] = 0;
   out_5519691553496756147[205] = 0;
   out_5519691553496756147[206] = 0;
   out_5519691553496756147[207] = 0;
   out_5519691553496756147[208] = 0;
   out_5519691553496756147[209] = 0;
   out_5519691553496756147[210] = 0;
   out_5519691553496756147[211] = 0;
   out_5519691553496756147[212] = 0;
   out_5519691553496756147[213] = 0;
   out_5519691553496756147[214] = 0;
   out_5519691553496756147[215] = 0;
   out_5519691553496756147[216] = 0;
   out_5519691553496756147[217] = 0;
   out_5519691553496756147[218] = 0;
   out_5519691553496756147[219] = 1.0;
   out_5519691553496756147[220] = 0;
   out_5519691553496756147[221] = 0;
   out_5519691553496756147[222] = 0;
   out_5519691553496756147[223] = 0;
   out_5519691553496756147[224] = 0;
   out_5519691553496756147[225] = 0;
   out_5519691553496756147[226] = 0;
   out_5519691553496756147[227] = 0;
   out_5519691553496756147[228] = 0;
   out_5519691553496756147[229] = 0;
   out_5519691553496756147[230] = 0;
   out_5519691553496756147[231] = 0;
   out_5519691553496756147[232] = 0;
   out_5519691553496756147[233] = 0;
   out_5519691553496756147[234] = 0;
   out_5519691553496756147[235] = 0;
   out_5519691553496756147[236] = 0;
   out_5519691553496756147[237] = 0;
   out_5519691553496756147[238] = 0;
   out_5519691553496756147[239] = 0;
   out_5519691553496756147[240] = 0;
   out_5519691553496756147[241] = 1.0;
   out_5519691553496756147[242] = 0;
   out_5519691553496756147[243] = 0;
   out_5519691553496756147[244] = 0;
   out_5519691553496756147[245] = 0;
   out_5519691553496756147[246] = 0;
   out_5519691553496756147[247] = 0;
   out_5519691553496756147[248] = 0;
   out_5519691553496756147[249] = 0;
   out_5519691553496756147[250] = 0;
   out_5519691553496756147[251] = 0;
   out_5519691553496756147[252] = 0;
   out_5519691553496756147[253] = 0;
   out_5519691553496756147[254] = 0;
   out_5519691553496756147[255] = 0;
   out_5519691553496756147[256] = 0;
   out_5519691553496756147[257] = 0;
   out_5519691553496756147[258] = 0;
   out_5519691553496756147[259] = 0;
   out_5519691553496756147[260] = 0;
   out_5519691553496756147[261] = 0;
   out_5519691553496756147[262] = 0;
   out_5519691553496756147[263] = 1.0;
   out_5519691553496756147[264] = 0;
   out_5519691553496756147[265] = 0;
   out_5519691553496756147[266] = 0;
   out_5519691553496756147[267] = 0;
   out_5519691553496756147[268] = 0;
   out_5519691553496756147[269] = 0;
   out_5519691553496756147[270] = 0;
   out_5519691553496756147[271] = 0;
   out_5519691553496756147[272] = 0;
   out_5519691553496756147[273] = 0;
   out_5519691553496756147[274] = 0;
   out_5519691553496756147[275] = 0;
   out_5519691553496756147[276] = 0;
   out_5519691553496756147[277] = 0;
   out_5519691553496756147[278] = 0;
   out_5519691553496756147[279] = 0;
   out_5519691553496756147[280] = 0;
   out_5519691553496756147[281] = 0;
   out_5519691553496756147[282] = 0;
   out_5519691553496756147[283] = 0;
   out_5519691553496756147[284] = 0;
   out_5519691553496756147[285] = 1.0;
   out_5519691553496756147[286] = 0;
   out_5519691553496756147[287] = 0;
   out_5519691553496756147[288] = 0;
   out_5519691553496756147[289] = 0;
   out_5519691553496756147[290] = 0;
   out_5519691553496756147[291] = 0;
   out_5519691553496756147[292] = 0;
   out_5519691553496756147[293] = 0;
   out_5519691553496756147[294] = 0;
   out_5519691553496756147[295] = 0;
   out_5519691553496756147[296] = 0;
   out_5519691553496756147[297] = 0;
   out_5519691553496756147[298] = 0;
   out_5519691553496756147[299] = 0;
   out_5519691553496756147[300] = 0;
   out_5519691553496756147[301] = 0;
   out_5519691553496756147[302] = 0;
   out_5519691553496756147[303] = 0;
   out_5519691553496756147[304] = 0;
   out_5519691553496756147[305] = 0;
   out_5519691553496756147[306] = 0;
   out_5519691553496756147[307] = 1.0;
   out_5519691553496756147[308] = 0;
   out_5519691553496756147[309] = 0;
   out_5519691553496756147[310] = 0;
   out_5519691553496756147[311] = 0;
   out_5519691553496756147[312] = 0;
   out_5519691553496756147[313] = 0;
   out_5519691553496756147[314] = 0;
   out_5519691553496756147[315] = 0;
   out_5519691553496756147[316] = 0;
   out_5519691553496756147[317] = 0;
   out_5519691553496756147[318] = 0;
   out_5519691553496756147[319] = 0;
   out_5519691553496756147[320] = 0;
   out_5519691553496756147[321] = 0;
   out_5519691553496756147[322] = 0;
   out_5519691553496756147[323] = 0;
   out_5519691553496756147[324] = 0;
   out_5519691553496756147[325] = 0;
   out_5519691553496756147[326] = 0;
   out_5519691553496756147[327] = 0;
   out_5519691553496756147[328] = 0;
   out_5519691553496756147[329] = 1.0;
   out_5519691553496756147[330] = 0;
   out_5519691553496756147[331] = 0;
   out_5519691553496756147[332] = 0;
   out_5519691553496756147[333] = 0;
   out_5519691553496756147[334] = 0;
   out_5519691553496756147[335] = 0;
   out_5519691553496756147[336] = 0;
   out_5519691553496756147[337] = 0;
   out_5519691553496756147[338] = 0;
   out_5519691553496756147[339] = 0;
   out_5519691553496756147[340] = 0;
   out_5519691553496756147[341] = 0;
   out_5519691553496756147[342] = 0;
   out_5519691553496756147[343] = 0;
   out_5519691553496756147[344] = 0;
   out_5519691553496756147[345] = 0;
   out_5519691553496756147[346] = 0;
   out_5519691553496756147[347] = 0;
   out_5519691553496756147[348] = 0;
   out_5519691553496756147[349] = 0;
   out_5519691553496756147[350] = 0;
   out_5519691553496756147[351] = 1.0;
   out_5519691553496756147[352] = 0;
   out_5519691553496756147[353] = 0;
   out_5519691553496756147[354] = 0;
   out_5519691553496756147[355] = 0;
   out_5519691553496756147[356] = 0;
   out_5519691553496756147[357] = 0;
   out_5519691553496756147[358] = 0;
   out_5519691553496756147[359] = 0;
   out_5519691553496756147[360] = 0;
   out_5519691553496756147[361] = 0;
   out_5519691553496756147[362] = 0;
   out_5519691553496756147[363] = 0;
   out_5519691553496756147[364] = 0;
   out_5519691553496756147[365] = 0;
   out_5519691553496756147[366] = 0;
   out_5519691553496756147[367] = 0;
   out_5519691553496756147[368] = 0;
   out_5519691553496756147[369] = 0;
   out_5519691553496756147[370] = 0;
   out_5519691553496756147[371] = 0;
   out_5519691553496756147[372] = 0;
   out_5519691553496756147[373] = 1.0;
   out_5519691553496756147[374] = 0;
   out_5519691553496756147[375] = 0;
   out_5519691553496756147[376] = 0;
   out_5519691553496756147[377] = 0;
   out_5519691553496756147[378] = 0;
   out_5519691553496756147[379] = 0;
   out_5519691553496756147[380] = 0;
   out_5519691553496756147[381] = 0;
   out_5519691553496756147[382] = 0;
   out_5519691553496756147[383] = 0;
   out_5519691553496756147[384] = 0;
   out_5519691553496756147[385] = 0;
   out_5519691553496756147[386] = 0;
   out_5519691553496756147[387] = 0;
   out_5519691553496756147[388] = 0;
   out_5519691553496756147[389] = 0;
   out_5519691553496756147[390] = 0;
   out_5519691553496756147[391] = 0;
   out_5519691553496756147[392] = 0;
   out_5519691553496756147[393] = 0;
   out_5519691553496756147[394] = 0;
   out_5519691553496756147[395] = 1.0;
   out_5519691553496756147[396] = 0;
   out_5519691553496756147[397] = 0;
   out_5519691553496756147[398] = 0;
   out_5519691553496756147[399] = 0;
   out_5519691553496756147[400] = 0;
   out_5519691553496756147[401] = 0;
   out_5519691553496756147[402] = 0;
   out_5519691553496756147[403] = 0;
   out_5519691553496756147[404] = 0;
   out_5519691553496756147[405] = 0;
   out_5519691553496756147[406] = 0;
   out_5519691553496756147[407] = 0;
   out_5519691553496756147[408] = 0;
   out_5519691553496756147[409] = 0;
   out_5519691553496756147[410] = 0;
   out_5519691553496756147[411] = 0;
   out_5519691553496756147[412] = 0;
   out_5519691553496756147[413] = 0;
   out_5519691553496756147[414] = 0;
   out_5519691553496756147[415] = 0;
   out_5519691553496756147[416] = 0;
   out_5519691553496756147[417] = 1.0;
   out_5519691553496756147[418] = 0;
   out_5519691553496756147[419] = 0;
   out_5519691553496756147[420] = 0;
   out_5519691553496756147[421] = 0;
   out_5519691553496756147[422] = 0;
   out_5519691553496756147[423] = 0;
   out_5519691553496756147[424] = 0;
   out_5519691553496756147[425] = 0;
   out_5519691553496756147[426] = 0;
   out_5519691553496756147[427] = 0;
   out_5519691553496756147[428] = 0;
   out_5519691553496756147[429] = 0;
   out_5519691553496756147[430] = 0;
   out_5519691553496756147[431] = 0;
   out_5519691553496756147[432] = 0;
   out_5519691553496756147[433] = 0;
   out_5519691553496756147[434] = 0;
   out_5519691553496756147[435] = 0;
   out_5519691553496756147[436] = 0;
   out_5519691553496756147[437] = 0;
   out_5519691553496756147[438] = 0;
   out_5519691553496756147[439] = 1.0;
   out_5519691553496756147[440] = 0;
   out_5519691553496756147[441] = 0;
   out_5519691553496756147[442] = 0;
   out_5519691553496756147[443] = 0;
   out_5519691553496756147[444] = 0;
   out_5519691553496756147[445] = 0;
   out_5519691553496756147[446] = 0;
   out_5519691553496756147[447] = 0;
   out_5519691553496756147[448] = 0;
   out_5519691553496756147[449] = 0;
   out_5519691553496756147[450] = 0;
   out_5519691553496756147[451] = 0;
   out_5519691553496756147[452] = 0;
   out_5519691553496756147[453] = 0;
   out_5519691553496756147[454] = 0;
   out_5519691553496756147[455] = 0;
   out_5519691553496756147[456] = 0;
   out_5519691553496756147[457] = 0;
   out_5519691553496756147[458] = 0;
   out_5519691553496756147[459] = 0;
   out_5519691553496756147[460] = 0;
   out_5519691553496756147[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4962418025735912644) {
   out_4962418025735912644[0] = dt*state[7] + state[0];
   out_4962418025735912644[1] = dt*state[8] + state[1];
   out_4962418025735912644[2] = dt*state[9] + state[2];
   out_4962418025735912644[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4962418025735912644[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4962418025735912644[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4962418025735912644[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4962418025735912644[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4962418025735912644[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4962418025735912644[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4962418025735912644[10] = state[10];
   out_4962418025735912644[11] = state[11];
   out_4962418025735912644[12] = state[12];
   out_4962418025735912644[13] = state[13];
   out_4962418025735912644[14] = state[14];
   out_4962418025735912644[15] = state[15];
   out_4962418025735912644[16] = state[16];
   out_4962418025735912644[17] = state[17];
   out_4962418025735912644[18] = state[18];
   out_4962418025735912644[19] = state[19];
   out_4962418025735912644[20] = state[20];
   out_4962418025735912644[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7092119509530607508) {
   out_7092119509530607508[0] = 1;
   out_7092119509530607508[1] = 0;
   out_7092119509530607508[2] = 0;
   out_7092119509530607508[3] = 0;
   out_7092119509530607508[4] = 0;
   out_7092119509530607508[5] = 0;
   out_7092119509530607508[6] = dt;
   out_7092119509530607508[7] = 0;
   out_7092119509530607508[8] = 0;
   out_7092119509530607508[9] = 0;
   out_7092119509530607508[10] = 0;
   out_7092119509530607508[11] = 0;
   out_7092119509530607508[12] = 0;
   out_7092119509530607508[13] = 0;
   out_7092119509530607508[14] = 0;
   out_7092119509530607508[15] = 0;
   out_7092119509530607508[16] = 0;
   out_7092119509530607508[17] = 0;
   out_7092119509530607508[18] = 0;
   out_7092119509530607508[19] = 0;
   out_7092119509530607508[20] = 0;
   out_7092119509530607508[21] = 0;
   out_7092119509530607508[22] = 1;
   out_7092119509530607508[23] = 0;
   out_7092119509530607508[24] = 0;
   out_7092119509530607508[25] = 0;
   out_7092119509530607508[26] = 0;
   out_7092119509530607508[27] = 0;
   out_7092119509530607508[28] = dt;
   out_7092119509530607508[29] = 0;
   out_7092119509530607508[30] = 0;
   out_7092119509530607508[31] = 0;
   out_7092119509530607508[32] = 0;
   out_7092119509530607508[33] = 0;
   out_7092119509530607508[34] = 0;
   out_7092119509530607508[35] = 0;
   out_7092119509530607508[36] = 0;
   out_7092119509530607508[37] = 0;
   out_7092119509530607508[38] = 0;
   out_7092119509530607508[39] = 0;
   out_7092119509530607508[40] = 0;
   out_7092119509530607508[41] = 0;
   out_7092119509530607508[42] = 0;
   out_7092119509530607508[43] = 0;
   out_7092119509530607508[44] = 1;
   out_7092119509530607508[45] = 0;
   out_7092119509530607508[46] = 0;
   out_7092119509530607508[47] = 0;
   out_7092119509530607508[48] = 0;
   out_7092119509530607508[49] = 0;
   out_7092119509530607508[50] = dt;
   out_7092119509530607508[51] = 0;
   out_7092119509530607508[52] = 0;
   out_7092119509530607508[53] = 0;
   out_7092119509530607508[54] = 0;
   out_7092119509530607508[55] = 0;
   out_7092119509530607508[56] = 0;
   out_7092119509530607508[57] = 0;
   out_7092119509530607508[58] = 0;
   out_7092119509530607508[59] = 0;
   out_7092119509530607508[60] = 0;
   out_7092119509530607508[61] = 0;
   out_7092119509530607508[62] = 0;
   out_7092119509530607508[63] = 0;
   out_7092119509530607508[64] = 0;
   out_7092119509530607508[65] = 0;
   out_7092119509530607508[66] = 1;
   out_7092119509530607508[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7092119509530607508[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7092119509530607508[69] = 0;
   out_7092119509530607508[70] = 0;
   out_7092119509530607508[71] = 0;
   out_7092119509530607508[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7092119509530607508[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7092119509530607508[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7092119509530607508[75] = 0;
   out_7092119509530607508[76] = 0;
   out_7092119509530607508[77] = 0;
   out_7092119509530607508[78] = 0;
   out_7092119509530607508[79] = 0;
   out_7092119509530607508[80] = 0;
   out_7092119509530607508[81] = 0;
   out_7092119509530607508[82] = 0;
   out_7092119509530607508[83] = 0;
   out_7092119509530607508[84] = 0;
   out_7092119509530607508[85] = 0;
   out_7092119509530607508[86] = 0;
   out_7092119509530607508[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7092119509530607508[88] = 1;
   out_7092119509530607508[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7092119509530607508[90] = 0;
   out_7092119509530607508[91] = 0;
   out_7092119509530607508[92] = 0;
   out_7092119509530607508[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7092119509530607508[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7092119509530607508[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7092119509530607508[96] = 0;
   out_7092119509530607508[97] = 0;
   out_7092119509530607508[98] = 0;
   out_7092119509530607508[99] = 0;
   out_7092119509530607508[100] = 0;
   out_7092119509530607508[101] = 0;
   out_7092119509530607508[102] = 0;
   out_7092119509530607508[103] = 0;
   out_7092119509530607508[104] = 0;
   out_7092119509530607508[105] = 0;
   out_7092119509530607508[106] = 0;
   out_7092119509530607508[107] = 0;
   out_7092119509530607508[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7092119509530607508[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7092119509530607508[110] = 1;
   out_7092119509530607508[111] = 0;
   out_7092119509530607508[112] = 0;
   out_7092119509530607508[113] = 0;
   out_7092119509530607508[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7092119509530607508[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7092119509530607508[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7092119509530607508[117] = 0;
   out_7092119509530607508[118] = 0;
   out_7092119509530607508[119] = 0;
   out_7092119509530607508[120] = 0;
   out_7092119509530607508[121] = 0;
   out_7092119509530607508[122] = 0;
   out_7092119509530607508[123] = 0;
   out_7092119509530607508[124] = 0;
   out_7092119509530607508[125] = 0;
   out_7092119509530607508[126] = 0;
   out_7092119509530607508[127] = 0;
   out_7092119509530607508[128] = 0;
   out_7092119509530607508[129] = 0;
   out_7092119509530607508[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7092119509530607508[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7092119509530607508[132] = 1;
   out_7092119509530607508[133] = 0;
   out_7092119509530607508[134] = 0;
   out_7092119509530607508[135] = 0;
   out_7092119509530607508[136] = 0;
   out_7092119509530607508[137] = 0;
   out_7092119509530607508[138] = 0;
   out_7092119509530607508[139] = 0;
   out_7092119509530607508[140] = 0;
   out_7092119509530607508[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7092119509530607508[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7092119509530607508[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7092119509530607508[144] = 0;
   out_7092119509530607508[145] = 0;
   out_7092119509530607508[146] = 0;
   out_7092119509530607508[147] = 0;
   out_7092119509530607508[148] = 0;
   out_7092119509530607508[149] = 0;
   out_7092119509530607508[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7092119509530607508[151] = 0;
   out_7092119509530607508[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7092119509530607508[153] = 0;
   out_7092119509530607508[154] = 1;
   out_7092119509530607508[155] = 0;
   out_7092119509530607508[156] = 0;
   out_7092119509530607508[157] = 0;
   out_7092119509530607508[158] = 0;
   out_7092119509530607508[159] = 0;
   out_7092119509530607508[160] = 0;
   out_7092119509530607508[161] = 0;
   out_7092119509530607508[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7092119509530607508[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7092119509530607508[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7092119509530607508[165] = 0;
   out_7092119509530607508[166] = 0;
   out_7092119509530607508[167] = 0;
   out_7092119509530607508[168] = 0;
   out_7092119509530607508[169] = 0;
   out_7092119509530607508[170] = 0;
   out_7092119509530607508[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7092119509530607508[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7092119509530607508[173] = 0;
   out_7092119509530607508[174] = 0;
   out_7092119509530607508[175] = 0;
   out_7092119509530607508[176] = 1;
   out_7092119509530607508[177] = 0;
   out_7092119509530607508[178] = 0;
   out_7092119509530607508[179] = 0;
   out_7092119509530607508[180] = 0;
   out_7092119509530607508[181] = 0;
   out_7092119509530607508[182] = 0;
   out_7092119509530607508[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7092119509530607508[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7092119509530607508[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7092119509530607508[186] = 0;
   out_7092119509530607508[187] = 0;
   out_7092119509530607508[188] = 0;
   out_7092119509530607508[189] = 0;
   out_7092119509530607508[190] = 0;
   out_7092119509530607508[191] = 0;
   out_7092119509530607508[192] = 0;
   out_7092119509530607508[193] = 0;
   out_7092119509530607508[194] = 0;
   out_7092119509530607508[195] = 0;
   out_7092119509530607508[196] = 0;
   out_7092119509530607508[197] = 0;
   out_7092119509530607508[198] = 1;
   out_7092119509530607508[199] = 0;
   out_7092119509530607508[200] = 0;
   out_7092119509530607508[201] = 0;
   out_7092119509530607508[202] = 0;
   out_7092119509530607508[203] = 0;
   out_7092119509530607508[204] = 0;
   out_7092119509530607508[205] = 0;
   out_7092119509530607508[206] = 0;
   out_7092119509530607508[207] = 0;
   out_7092119509530607508[208] = 0;
   out_7092119509530607508[209] = 0;
   out_7092119509530607508[210] = 0;
   out_7092119509530607508[211] = 0;
   out_7092119509530607508[212] = 0;
   out_7092119509530607508[213] = 0;
   out_7092119509530607508[214] = 0;
   out_7092119509530607508[215] = 0;
   out_7092119509530607508[216] = 0;
   out_7092119509530607508[217] = 0;
   out_7092119509530607508[218] = 0;
   out_7092119509530607508[219] = 0;
   out_7092119509530607508[220] = 1;
   out_7092119509530607508[221] = 0;
   out_7092119509530607508[222] = 0;
   out_7092119509530607508[223] = 0;
   out_7092119509530607508[224] = 0;
   out_7092119509530607508[225] = 0;
   out_7092119509530607508[226] = 0;
   out_7092119509530607508[227] = 0;
   out_7092119509530607508[228] = 0;
   out_7092119509530607508[229] = 0;
   out_7092119509530607508[230] = 0;
   out_7092119509530607508[231] = 0;
   out_7092119509530607508[232] = 0;
   out_7092119509530607508[233] = 0;
   out_7092119509530607508[234] = 0;
   out_7092119509530607508[235] = 0;
   out_7092119509530607508[236] = 0;
   out_7092119509530607508[237] = 0;
   out_7092119509530607508[238] = 0;
   out_7092119509530607508[239] = 0;
   out_7092119509530607508[240] = 0;
   out_7092119509530607508[241] = 0;
   out_7092119509530607508[242] = 1;
   out_7092119509530607508[243] = 0;
   out_7092119509530607508[244] = 0;
   out_7092119509530607508[245] = 0;
   out_7092119509530607508[246] = 0;
   out_7092119509530607508[247] = 0;
   out_7092119509530607508[248] = 0;
   out_7092119509530607508[249] = 0;
   out_7092119509530607508[250] = 0;
   out_7092119509530607508[251] = 0;
   out_7092119509530607508[252] = 0;
   out_7092119509530607508[253] = 0;
   out_7092119509530607508[254] = 0;
   out_7092119509530607508[255] = 0;
   out_7092119509530607508[256] = 0;
   out_7092119509530607508[257] = 0;
   out_7092119509530607508[258] = 0;
   out_7092119509530607508[259] = 0;
   out_7092119509530607508[260] = 0;
   out_7092119509530607508[261] = 0;
   out_7092119509530607508[262] = 0;
   out_7092119509530607508[263] = 0;
   out_7092119509530607508[264] = 1;
   out_7092119509530607508[265] = 0;
   out_7092119509530607508[266] = 0;
   out_7092119509530607508[267] = 0;
   out_7092119509530607508[268] = 0;
   out_7092119509530607508[269] = 0;
   out_7092119509530607508[270] = 0;
   out_7092119509530607508[271] = 0;
   out_7092119509530607508[272] = 0;
   out_7092119509530607508[273] = 0;
   out_7092119509530607508[274] = 0;
   out_7092119509530607508[275] = 0;
   out_7092119509530607508[276] = 0;
   out_7092119509530607508[277] = 0;
   out_7092119509530607508[278] = 0;
   out_7092119509530607508[279] = 0;
   out_7092119509530607508[280] = 0;
   out_7092119509530607508[281] = 0;
   out_7092119509530607508[282] = 0;
   out_7092119509530607508[283] = 0;
   out_7092119509530607508[284] = 0;
   out_7092119509530607508[285] = 0;
   out_7092119509530607508[286] = 1;
   out_7092119509530607508[287] = 0;
   out_7092119509530607508[288] = 0;
   out_7092119509530607508[289] = 0;
   out_7092119509530607508[290] = 0;
   out_7092119509530607508[291] = 0;
   out_7092119509530607508[292] = 0;
   out_7092119509530607508[293] = 0;
   out_7092119509530607508[294] = 0;
   out_7092119509530607508[295] = 0;
   out_7092119509530607508[296] = 0;
   out_7092119509530607508[297] = 0;
   out_7092119509530607508[298] = 0;
   out_7092119509530607508[299] = 0;
   out_7092119509530607508[300] = 0;
   out_7092119509530607508[301] = 0;
   out_7092119509530607508[302] = 0;
   out_7092119509530607508[303] = 0;
   out_7092119509530607508[304] = 0;
   out_7092119509530607508[305] = 0;
   out_7092119509530607508[306] = 0;
   out_7092119509530607508[307] = 0;
   out_7092119509530607508[308] = 1;
   out_7092119509530607508[309] = 0;
   out_7092119509530607508[310] = 0;
   out_7092119509530607508[311] = 0;
   out_7092119509530607508[312] = 0;
   out_7092119509530607508[313] = 0;
   out_7092119509530607508[314] = 0;
   out_7092119509530607508[315] = 0;
   out_7092119509530607508[316] = 0;
   out_7092119509530607508[317] = 0;
   out_7092119509530607508[318] = 0;
   out_7092119509530607508[319] = 0;
   out_7092119509530607508[320] = 0;
   out_7092119509530607508[321] = 0;
   out_7092119509530607508[322] = 0;
   out_7092119509530607508[323] = 0;
   out_7092119509530607508[324] = 0;
   out_7092119509530607508[325] = 0;
   out_7092119509530607508[326] = 0;
   out_7092119509530607508[327] = 0;
   out_7092119509530607508[328] = 0;
   out_7092119509530607508[329] = 0;
   out_7092119509530607508[330] = 1;
   out_7092119509530607508[331] = 0;
   out_7092119509530607508[332] = 0;
   out_7092119509530607508[333] = 0;
   out_7092119509530607508[334] = 0;
   out_7092119509530607508[335] = 0;
   out_7092119509530607508[336] = 0;
   out_7092119509530607508[337] = 0;
   out_7092119509530607508[338] = 0;
   out_7092119509530607508[339] = 0;
   out_7092119509530607508[340] = 0;
   out_7092119509530607508[341] = 0;
   out_7092119509530607508[342] = 0;
   out_7092119509530607508[343] = 0;
   out_7092119509530607508[344] = 0;
   out_7092119509530607508[345] = 0;
   out_7092119509530607508[346] = 0;
   out_7092119509530607508[347] = 0;
   out_7092119509530607508[348] = 0;
   out_7092119509530607508[349] = 0;
   out_7092119509530607508[350] = 0;
   out_7092119509530607508[351] = 0;
   out_7092119509530607508[352] = 1;
   out_7092119509530607508[353] = 0;
   out_7092119509530607508[354] = 0;
   out_7092119509530607508[355] = 0;
   out_7092119509530607508[356] = 0;
   out_7092119509530607508[357] = 0;
   out_7092119509530607508[358] = 0;
   out_7092119509530607508[359] = 0;
   out_7092119509530607508[360] = 0;
   out_7092119509530607508[361] = 0;
   out_7092119509530607508[362] = 0;
   out_7092119509530607508[363] = 0;
   out_7092119509530607508[364] = 0;
   out_7092119509530607508[365] = 0;
   out_7092119509530607508[366] = 0;
   out_7092119509530607508[367] = 0;
   out_7092119509530607508[368] = 0;
   out_7092119509530607508[369] = 0;
   out_7092119509530607508[370] = 0;
   out_7092119509530607508[371] = 0;
   out_7092119509530607508[372] = 0;
   out_7092119509530607508[373] = 0;
   out_7092119509530607508[374] = 1;
   out_7092119509530607508[375] = 0;
   out_7092119509530607508[376] = 0;
   out_7092119509530607508[377] = 0;
   out_7092119509530607508[378] = 0;
   out_7092119509530607508[379] = 0;
   out_7092119509530607508[380] = 0;
   out_7092119509530607508[381] = 0;
   out_7092119509530607508[382] = 0;
   out_7092119509530607508[383] = 0;
   out_7092119509530607508[384] = 0;
   out_7092119509530607508[385] = 0;
   out_7092119509530607508[386] = 0;
   out_7092119509530607508[387] = 0;
   out_7092119509530607508[388] = 0;
   out_7092119509530607508[389] = 0;
   out_7092119509530607508[390] = 0;
   out_7092119509530607508[391] = 0;
   out_7092119509530607508[392] = 0;
   out_7092119509530607508[393] = 0;
   out_7092119509530607508[394] = 0;
   out_7092119509530607508[395] = 0;
   out_7092119509530607508[396] = 1;
   out_7092119509530607508[397] = 0;
   out_7092119509530607508[398] = 0;
   out_7092119509530607508[399] = 0;
   out_7092119509530607508[400] = 0;
   out_7092119509530607508[401] = 0;
   out_7092119509530607508[402] = 0;
   out_7092119509530607508[403] = 0;
   out_7092119509530607508[404] = 0;
   out_7092119509530607508[405] = 0;
   out_7092119509530607508[406] = 0;
   out_7092119509530607508[407] = 0;
   out_7092119509530607508[408] = 0;
   out_7092119509530607508[409] = 0;
   out_7092119509530607508[410] = 0;
   out_7092119509530607508[411] = 0;
   out_7092119509530607508[412] = 0;
   out_7092119509530607508[413] = 0;
   out_7092119509530607508[414] = 0;
   out_7092119509530607508[415] = 0;
   out_7092119509530607508[416] = 0;
   out_7092119509530607508[417] = 0;
   out_7092119509530607508[418] = 1;
   out_7092119509530607508[419] = 0;
   out_7092119509530607508[420] = 0;
   out_7092119509530607508[421] = 0;
   out_7092119509530607508[422] = 0;
   out_7092119509530607508[423] = 0;
   out_7092119509530607508[424] = 0;
   out_7092119509530607508[425] = 0;
   out_7092119509530607508[426] = 0;
   out_7092119509530607508[427] = 0;
   out_7092119509530607508[428] = 0;
   out_7092119509530607508[429] = 0;
   out_7092119509530607508[430] = 0;
   out_7092119509530607508[431] = 0;
   out_7092119509530607508[432] = 0;
   out_7092119509530607508[433] = 0;
   out_7092119509530607508[434] = 0;
   out_7092119509530607508[435] = 0;
   out_7092119509530607508[436] = 0;
   out_7092119509530607508[437] = 0;
   out_7092119509530607508[438] = 0;
   out_7092119509530607508[439] = 0;
   out_7092119509530607508[440] = 1;
}
void h_4(double *state, double *unused, double *out_2304202517429654977) {
   out_2304202517429654977[0] = state[10] + state[13];
   out_2304202517429654977[1] = state[11] + state[14];
   out_2304202517429654977[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4543373436150880457) {
   out_4543373436150880457[0] = 0;
   out_4543373436150880457[1] = 0;
   out_4543373436150880457[2] = 0;
   out_4543373436150880457[3] = 0;
   out_4543373436150880457[4] = 0;
   out_4543373436150880457[5] = 0;
   out_4543373436150880457[6] = 0;
   out_4543373436150880457[7] = 0;
   out_4543373436150880457[8] = 0;
   out_4543373436150880457[9] = 0;
   out_4543373436150880457[10] = 1;
   out_4543373436150880457[11] = 0;
   out_4543373436150880457[12] = 0;
   out_4543373436150880457[13] = 1;
   out_4543373436150880457[14] = 0;
   out_4543373436150880457[15] = 0;
   out_4543373436150880457[16] = 0;
   out_4543373436150880457[17] = 0;
   out_4543373436150880457[18] = 0;
   out_4543373436150880457[19] = 0;
   out_4543373436150880457[20] = 0;
   out_4543373436150880457[21] = 0;
   out_4543373436150880457[22] = 0;
   out_4543373436150880457[23] = 0;
   out_4543373436150880457[24] = 0;
   out_4543373436150880457[25] = 0;
   out_4543373436150880457[26] = 0;
   out_4543373436150880457[27] = 0;
   out_4543373436150880457[28] = 0;
   out_4543373436150880457[29] = 0;
   out_4543373436150880457[30] = 0;
   out_4543373436150880457[31] = 0;
   out_4543373436150880457[32] = 0;
   out_4543373436150880457[33] = 1;
   out_4543373436150880457[34] = 0;
   out_4543373436150880457[35] = 0;
   out_4543373436150880457[36] = 1;
   out_4543373436150880457[37] = 0;
   out_4543373436150880457[38] = 0;
   out_4543373436150880457[39] = 0;
   out_4543373436150880457[40] = 0;
   out_4543373436150880457[41] = 0;
   out_4543373436150880457[42] = 0;
   out_4543373436150880457[43] = 0;
   out_4543373436150880457[44] = 0;
   out_4543373436150880457[45] = 0;
   out_4543373436150880457[46] = 0;
   out_4543373436150880457[47] = 0;
   out_4543373436150880457[48] = 0;
   out_4543373436150880457[49] = 0;
   out_4543373436150880457[50] = 0;
   out_4543373436150880457[51] = 0;
   out_4543373436150880457[52] = 0;
   out_4543373436150880457[53] = 0;
   out_4543373436150880457[54] = 0;
   out_4543373436150880457[55] = 0;
   out_4543373436150880457[56] = 1;
   out_4543373436150880457[57] = 0;
   out_4543373436150880457[58] = 0;
   out_4543373436150880457[59] = 1;
   out_4543373436150880457[60] = 0;
   out_4543373436150880457[61] = 0;
   out_4543373436150880457[62] = 0;
   out_4543373436150880457[63] = 0;
   out_4543373436150880457[64] = 0;
   out_4543373436150880457[65] = 0;
}
void h_9(double *state, double *unused, double *out_6924777554652844558) {
   out_6924777554652844558[0] = state[10];
   out_6924777554652844558[1] = state[11];
   out_6924777554652844558[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7432234988430959799) {
   out_7432234988430959799[0] = 0;
   out_7432234988430959799[1] = 0;
   out_7432234988430959799[2] = 0;
   out_7432234988430959799[3] = 0;
   out_7432234988430959799[4] = 0;
   out_7432234988430959799[5] = 0;
   out_7432234988430959799[6] = 0;
   out_7432234988430959799[7] = 0;
   out_7432234988430959799[8] = 0;
   out_7432234988430959799[9] = 0;
   out_7432234988430959799[10] = 1;
   out_7432234988430959799[11] = 0;
   out_7432234988430959799[12] = 0;
   out_7432234988430959799[13] = 0;
   out_7432234988430959799[14] = 0;
   out_7432234988430959799[15] = 0;
   out_7432234988430959799[16] = 0;
   out_7432234988430959799[17] = 0;
   out_7432234988430959799[18] = 0;
   out_7432234988430959799[19] = 0;
   out_7432234988430959799[20] = 0;
   out_7432234988430959799[21] = 0;
   out_7432234988430959799[22] = 0;
   out_7432234988430959799[23] = 0;
   out_7432234988430959799[24] = 0;
   out_7432234988430959799[25] = 0;
   out_7432234988430959799[26] = 0;
   out_7432234988430959799[27] = 0;
   out_7432234988430959799[28] = 0;
   out_7432234988430959799[29] = 0;
   out_7432234988430959799[30] = 0;
   out_7432234988430959799[31] = 0;
   out_7432234988430959799[32] = 0;
   out_7432234988430959799[33] = 1;
   out_7432234988430959799[34] = 0;
   out_7432234988430959799[35] = 0;
   out_7432234988430959799[36] = 0;
   out_7432234988430959799[37] = 0;
   out_7432234988430959799[38] = 0;
   out_7432234988430959799[39] = 0;
   out_7432234988430959799[40] = 0;
   out_7432234988430959799[41] = 0;
   out_7432234988430959799[42] = 0;
   out_7432234988430959799[43] = 0;
   out_7432234988430959799[44] = 0;
   out_7432234988430959799[45] = 0;
   out_7432234988430959799[46] = 0;
   out_7432234988430959799[47] = 0;
   out_7432234988430959799[48] = 0;
   out_7432234988430959799[49] = 0;
   out_7432234988430959799[50] = 0;
   out_7432234988430959799[51] = 0;
   out_7432234988430959799[52] = 0;
   out_7432234988430959799[53] = 0;
   out_7432234988430959799[54] = 0;
   out_7432234988430959799[55] = 0;
   out_7432234988430959799[56] = 1;
   out_7432234988430959799[57] = 0;
   out_7432234988430959799[58] = 0;
   out_7432234988430959799[59] = 0;
   out_7432234988430959799[60] = 0;
   out_7432234988430959799[61] = 0;
   out_7432234988430959799[62] = 0;
   out_7432234988430959799[63] = 0;
   out_7432234988430959799[64] = 0;
   out_7432234988430959799[65] = 0;
}
void h_10(double *state, double *unused, double *out_7119768345505507454) {
   out_7119768345505507454[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7119768345505507454[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7119768345505507454[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7764892465746032956) {
   out_7764892465746032956[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7764892465746032956[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7764892465746032956[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7764892465746032956[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7764892465746032956[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7764892465746032956[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7764892465746032956[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7764892465746032956[7] = 0;
   out_7764892465746032956[8] = 0;
   out_7764892465746032956[9] = 0;
   out_7764892465746032956[10] = 0;
   out_7764892465746032956[11] = 0;
   out_7764892465746032956[12] = 0;
   out_7764892465746032956[13] = 0;
   out_7764892465746032956[14] = 0;
   out_7764892465746032956[15] = 0;
   out_7764892465746032956[16] = 1;
   out_7764892465746032956[17] = 0;
   out_7764892465746032956[18] = 0;
   out_7764892465746032956[19] = 1;
   out_7764892465746032956[20] = 0;
   out_7764892465746032956[21] = 0;
   out_7764892465746032956[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7764892465746032956[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7764892465746032956[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7764892465746032956[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7764892465746032956[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7764892465746032956[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7764892465746032956[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7764892465746032956[29] = 0;
   out_7764892465746032956[30] = 0;
   out_7764892465746032956[31] = 0;
   out_7764892465746032956[32] = 0;
   out_7764892465746032956[33] = 0;
   out_7764892465746032956[34] = 0;
   out_7764892465746032956[35] = 0;
   out_7764892465746032956[36] = 0;
   out_7764892465746032956[37] = 0;
   out_7764892465746032956[38] = 0;
   out_7764892465746032956[39] = 1;
   out_7764892465746032956[40] = 0;
   out_7764892465746032956[41] = 0;
   out_7764892465746032956[42] = 1;
   out_7764892465746032956[43] = 0;
   out_7764892465746032956[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7764892465746032956[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7764892465746032956[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7764892465746032956[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7764892465746032956[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7764892465746032956[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7764892465746032956[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7764892465746032956[51] = 0;
   out_7764892465746032956[52] = 0;
   out_7764892465746032956[53] = 0;
   out_7764892465746032956[54] = 0;
   out_7764892465746032956[55] = 0;
   out_7764892465746032956[56] = 0;
   out_7764892465746032956[57] = 0;
   out_7764892465746032956[58] = 0;
   out_7764892465746032956[59] = 0;
   out_7764892465746032956[60] = 0;
   out_7764892465746032956[61] = 0;
   out_7764892465746032956[62] = 1;
   out_7764892465746032956[63] = 0;
   out_7764892465746032956[64] = 0;
   out_7764892465746032956[65] = 1;
}
void h_12(double *state, double *unused, double *out_2658616884484351056) {
   out_2658616884484351056[0] = state[0];
   out_2658616884484351056[1] = state[1];
   out_2658616884484351056[2] = state[2];
}
void H_12(double *state, double *unused, double *out_6236242323876220667) {
   out_6236242323876220667[0] = 1;
   out_6236242323876220667[1] = 0;
   out_6236242323876220667[2] = 0;
   out_6236242323876220667[3] = 0;
   out_6236242323876220667[4] = 0;
   out_6236242323876220667[5] = 0;
   out_6236242323876220667[6] = 0;
   out_6236242323876220667[7] = 0;
   out_6236242323876220667[8] = 0;
   out_6236242323876220667[9] = 0;
   out_6236242323876220667[10] = 0;
   out_6236242323876220667[11] = 0;
   out_6236242323876220667[12] = 0;
   out_6236242323876220667[13] = 0;
   out_6236242323876220667[14] = 0;
   out_6236242323876220667[15] = 0;
   out_6236242323876220667[16] = 0;
   out_6236242323876220667[17] = 0;
   out_6236242323876220667[18] = 0;
   out_6236242323876220667[19] = 0;
   out_6236242323876220667[20] = 0;
   out_6236242323876220667[21] = 0;
   out_6236242323876220667[22] = 0;
   out_6236242323876220667[23] = 1;
   out_6236242323876220667[24] = 0;
   out_6236242323876220667[25] = 0;
   out_6236242323876220667[26] = 0;
   out_6236242323876220667[27] = 0;
   out_6236242323876220667[28] = 0;
   out_6236242323876220667[29] = 0;
   out_6236242323876220667[30] = 0;
   out_6236242323876220667[31] = 0;
   out_6236242323876220667[32] = 0;
   out_6236242323876220667[33] = 0;
   out_6236242323876220667[34] = 0;
   out_6236242323876220667[35] = 0;
   out_6236242323876220667[36] = 0;
   out_6236242323876220667[37] = 0;
   out_6236242323876220667[38] = 0;
   out_6236242323876220667[39] = 0;
   out_6236242323876220667[40] = 0;
   out_6236242323876220667[41] = 0;
   out_6236242323876220667[42] = 0;
   out_6236242323876220667[43] = 0;
   out_6236242323876220667[44] = 0;
   out_6236242323876220667[45] = 0;
   out_6236242323876220667[46] = 1;
   out_6236242323876220667[47] = 0;
   out_6236242323876220667[48] = 0;
   out_6236242323876220667[49] = 0;
   out_6236242323876220667[50] = 0;
   out_6236242323876220667[51] = 0;
   out_6236242323876220667[52] = 0;
   out_6236242323876220667[53] = 0;
   out_6236242323876220667[54] = 0;
   out_6236242323876220667[55] = 0;
   out_6236242323876220667[56] = 0;
   out_6236242323876220667[57] = 0;
   out_6236242323876220667[58] = 0;
   out_6236242323876220667[59] = 0;
   out_6236242323876220667[60] = 0;
   out_6236242323876220667[61] = 0;
   out_6236242323876220667[62] = 0;
   out_6236242323876220667[63] = 0;
   out_6236242323876220667[64] = 0;
   out_6236242323876220667[65] = 0;
}
void h_35(double *state, double *unused, double *out_1101415130013129771) {
   out_1101415130013129771[0] = state[7];
   out_1101415130013129771[1] = state[8];
   out_1101415130013129771[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7910035493523487833) {
   out_7910035493523487833[0] = 0;
   out_7910035493523487833[1] = 0;
   out_7910035493523487833[2] = 0;
   out_7910035493523487833[3] = 0;
   out_7910035493523487833[4] = 0;
   out_7910035493523487833[5] = 0;
   out_7910035493523487833[6] = 0;
   out_7910035493523487833[7] = 1;
   out_7910035493523487833[8] = 0;
   out_7910035493523487833[9] = 0;
   out_7910035493523487833[10] = 0;
   out_7910035493523487833[11] = 0;
   out_7910035493523487833[12] = 0;
   out_7910035493523487833[13] = 0;
   out_7910035493523487833[14] = 0;
   out_7910035493523487833[15] = 0;
   out_7910035493523487833[16] = 0;
   out_7910035493523487833[17] = 0;
   out_7910035493523487833[18] = 0;
   out_7910035493523487833[19] = 0;
   out_7910035493523487833[20] = 0;
   out_7910035493523487833[21] = 0;
   out_7910035493523487833[22] = 0;
   out_7910035493523487833[23] = 0;
   out_7910035493523487833[24] = 0;
   out_7910035493523487833[25] = 0;
   out_7910035493523487833[26] = 0;
   out_7910035493523487833[27] = 0;
   out_7910035493523487833[28] = 0;
   out_7910035493523487833[29] = 0;
   out_7910035493523487833[30] = 1;
   out_7910035493523487833[31] = 0;
   out_7910035493523487833[32] = 0;
   out_7910035493523487833[33] = 0;
   out_7910035493523487833[34] = 0;
   out_7910035493523487833[35] = 0;
   out_7910035493523487833[36] = 0;
   out_7910035493523487833[37] = 0;
   out_7910035493523487833[38] = 0;
   out_7910035493523487833[39] = 0;
   out_7910035493523487833[40] = 0;
   out_7910035493523487833[41] = 0;
   out_7910035493523487833[42] = 0;
   out_7910035493523487833[43] = 0;
   out_7910035493523487833[44] = 0;
   out_7910035493523487833[45] = 0;
   out_7910035493523487833[46] = 0;
   out_7910035493523487833[47] = 0;
   out_7910035493523487833[48] = 0;
   out_7910035493523487833[49] = 0;
   out_7910035493523487833[50] = 0;
   out_7910035493523487833[51] = 0;
   out_7910035493523487833[52] = 0;
   out_7910035493523487833[53] = 1;
   out_7910035493523487833[54] = 0;
   out_7910035493523487833[55] = 0;
   out_7910035493523487833[56] = 0;
   out_7910035493523487833[57] = 0;
   out_7910035493523487833[58] = 0;
   out_7910035493523487833[59] = 0;
   out_7910035493523487833[60] = 0;
   out_7910035493523487833[61] = 0;
   out_7910035493523487833[62] = 0;
   out_7910035493523487833[63] = 0;
   out_7910035493523487833[64] = 0;
   out_7910035493523487833[65] = 0;
}
void h_32(double *state, double *unused, double *out_2302632350581349354) {
   out_2302632350581349354[0] = state[3];
   out_2302632350581349354[1] = state[4];
   out_2302632350581349354[2] = state[5];
   out_2302632350581349354[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2310625080656405600) {
   out_2310625080656405600[0] = 0;
   out_2310625080656405600[1] = 0;
   out_2310625080656405600[2] = 0;
   out_2310625080656405600[3] = 1;
   out_2310625080656405600[4] = 0;
   out_2310625080656405600[5] = 0;
   out_2310625080656405600[6] = 0;
   out_2310625080656405600[7] = 0;
   out_2310625080656405600[8] = 0;
   out_2310625080656405600[9] = 0;
   out_2310625080656405600[10] = 0;
   out_2310625080656405600[11] = 0;
   out_2310625080656405600[12] = 0;
   out_2310625080656405600[13] = 0;
   out_2310625080656405600[14] = 0;
   out_2310625080656405600[15] = 0;
   out_2310625080656405600[16] = 0;
   out_2310625080656405600[17] = 0;
   out_2310625080656405600[18] = 0;
   out_2310625080656405600[19] = 0;
   out_2310625080656405600[20] = 0;
   out_2310625080656405600[21] = 0;
   out_2310625080656405600[22] = 0;
   out_2310625080656405600[23] = 0;
   out_2310625080656405600[24] = 0;
   out_2310625080656405600[25] = 0;
   out_2310625080656405600[26] = 1;
   out_2310625080656405600[27] = 0;
   out_2310625080656405600[28] = 0;
   out_2310625080656405600[29] = 0;
   out_2310625080656405600[30] = 0;
   out_2310625080656405600[31] = 0;
   out_2310625080656405600[32] = 0;
   out_2310625080656405600[33] = 0;
   out_2310625080656405600[34] = 0;
   out_2310625080656405600[35] = 0;
   out_2310625080656405600[36] = 0;
   out_2310625080656405600[37] = 0;
   out_2310625080656405600[38] = 0;
   out_2310625080656405600[39] = 0;
   out_2310625080656405600[40] = 0;
   out_2310625080656405600[41] = 0;
   out_2310625080656405600[42] = 0;
   out_2310625080656405600[43] = 0;
   out_2310625080656405600[44] = 0;
   out_2310625080656405600[45] = 0;
   out_2310625080656405600[46] = 0;
   out_2310625080656405600[47] = 0;
   out_2310625080656405600[48] = 0;
   out_2310625080656405600[49] = 1;
   out_2310625080656405600[50] = 0;
   out_2310625080656405600[51] = 0;
   out_2310625080656405600[52] = 0;
   out_2310625080656405600[53] = 0;
   out_2310625080656405600[54] = 0;
   out_2310625080656405600[55] = 0;
   out_2310625080656405600[56] = 0;
   out_2310625080656405600[57] = 0;
   out_2310625080656405600[58] = 0;
   out_2310625080656405600[59] = 0;
   out_2310625080656405600[60] = 0;
   out_2310625080656405600[61] = 0;
   out_2310625080656405600[62] = 0;
   out_2310625080656405600[63] = 0;
   out_2310625080656405600[64] = 0;
   out_2310625080656405600[65] = 0;
   out_2310625080656405600[66] = 0;
   out_2310625080656405600[67] = 0;
   out_2310625080656405600[68] = 0;
   out_2310625080656405600[69] = 0;
   out_2310625080656405600[70] = 0;
   out_2310625080656405600[71] = 0;
   out_2310625080656405600[72] = 1;
   out_2310625080656405600[73] = 0;
   out_2310625080656405600[74] = 0;
   out_2310625080656405600[75] = 0;
   out_2310625080656405600[76] = 0;
   out_2310625080656405600[77] = 0;
   out_2310625080656405600[78] = 0;
   out_2310625080656405600[79] = 0;
   out_2310625080656405600[80] = 0;
   out_2310625080656405600[81] = 0;
   out_2310625080656405600[82] = 0;
   out_2310625080656405600[83] = 0;
   out_2310625080656405600[84] = 0;
   out_2310625080656405600[85] = 0;
   out_2310625080656405600[86] = 0;
   out_2310625080656405600[87] = 0;
}
void h_13(double *state, double *unused, double *out_1611300704087694343) {
   out_1611300704087694343[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1611300704087694343[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1611300704087694343[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4680254586320445968) {
   out_4680254586320445968[0] = 0;
   out_4680254586320445968[1] = 0;
   out_4680254586320445968[2] = 0;
   out_4680254586320445968[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4680254586320445968[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4680254586320445968[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4680254586320445968[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4680254586320445968[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4680254586320445968[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4680254586320445968[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4680254586320445968[10] = 0;
   out_4680254586320445968[11] = 0;
   out_4680254586320445968[12] = 0;
   out_4680254586320445968[13] = 0;
   out_4680254586320445968[14] = 0;
   out_4680254586320445968[15] = 0;
   out_4680254586320445968[16] = 0;
   out_4680254586320445968[17] = 0;
   out_4680254586320445968[18] = 0;
   out_4680254586320445968[19] = 0;
   out_4680254586320445968[20] = 0;
   out_4680254586320445968[21] = 0;
   out_4680254586320445968[22] = 0;
   out_4680254586320445968[23] = 0;
   out_4680254586320445968[24] = 0;
   out_4680254586320445968[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4680254586320445968[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4680254586320445968[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4680254586320445968[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4680254586320445968[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4680254586320445968[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4680254586320445968[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4680254586320445968[32] = 0;
   out_4680254586320445968[33] = 0;
   out_4680254586320445968[34] = 0;
   out_4680254586320445968[35] = 0;
   out_4680254586320445968[36] = 0;
   out_4680254586320445968[37] = 0;
   out_4680254586320445968[38] = 0;
   out_4680254586320445968[39] = 0;
   out_4680254586320445968[40] = 0;
   out_4680254586320445968[41] = 0;
   out_4680254586320445968[42] = 0;
   out_4680254586320445968[43] = 0;
   out_4680254586320445968[44] = 0;
   out_4680254586320445968[45] = 0;
   out_4680254586320445968[46] = 0;
   out_4680254586320445968[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4680254586320445968[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4680254586320445968[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4680254586320445968[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4680254586320445968[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4680254586320445968[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4680254586320445968[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4680254586320445968[54] = 0;
   out_4680254586320445968[55] = 0;
   out_4680254586320445968[56] = 0;
   out_4680254586320445968[57] = 0;
   out_4680254586320445968[58] = 0;
   out_4680254586320445968[59] = 0;
   out_4680254586320445968[60] = 0;
   out_4680254586320445968[61] = 0;
   out_4680254586320445968[62] = 0;
   out_4680254586320445968[63] = 0;
   out_4680254586320445968[64] = 0;
   out_4680254586320445968[65] = 0;
}
void h_14(double *state, double *unused, double *out_6924777554652844558) {
   out_6924777554652844558[0] = state[10];
   out_6924777554652844558[1] = state[11];
   out_6924777554652844558[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7432234988430959799) {
   out_7432234988430959799[0] = 0;
   out_7432234988430959799[1] = 0;
   out_7432234988430959799[2] = 0;
   out_7432234988430959799[3] = 0;
   out_7432234988430959799[4] = 0;
   out_7432234988430959799[5] = 0;
   out_7432234988430959799[6] = 0;
   out_7432234988430959799[7] = 0;
   out_7432234988430959799[8] = 0;
   out_7432234988430959799[9] = 0;
   out_7432234988430959799[10] = 1;
   out_7432234988430959799[11] = 0;
   out_7432234988430959799[12] = 0;
   out_7432234988430959799[13] = 0;
   out_7432234988430959799[14] = 0;
   out_7432234988430959799[15] = 0;
   out_7432234988430959799[16] = 0;
   out_7432234988430959799[17] = 0;
   out_7432234988430959799[18] = 0;
   out_7432234988430959799[19] = 0;
   out_7432234988430959799[20] = 0;
   out_7432234988430959799[21] = 0;
   out_7432234988430959799[22] = 0;
   out_7432234988430959799[23] = 0;
   out_7432234988430959799[24] = 0;
   out_7432234988430959799[25] = 0;
   out_7432234988430959799[26] = 0;
   out_7432234988430959799[27] = 0;
   out_7432234988430959799[28] = 0;
   out_7432234988430959799[29] = 0;
   out_7432234988430959799[30] = 0;
   out_7432234988430959799[31] = 0;
   out_7432234988430959799[32] = 0;
   out_7432234988430959799[33] = 1;
   out_7432234988430959799[34] = 0;
   out_7432234988430959799[35] = 0;
   out_7432234988430959799[36] = 0;
   out_7432234988430959799[37] = 0;
   out_7432234988430959799[38] = 0;
   out_7432234988430959799[39] = 0;
   out_7432234988430959799[40] = 0;
   out_7432234988430959799[41] = 0;
   out_7432234988430959799[42] = 0;
   out_7432234988430959799[43] = 0;
   out_7432234988430959799[44] = 0;
   out_7432234988430959799[45] = 0;
   out_7432234988430959799[46] = 0;
   out_7432234988430959799[47] = 0;
   out_7432234988430959799[48] = 0;
   out_7432234988430959799[49] = 0;
   out_7432234988430959799[50] = 0;
   out_7432234988430959799[51] = 0;
   out_7432234988430959799[52] = 0;
   out_7432234988430959799[53] = 0;
   out_7432234988430959799[54] = 0;
   out_7432234988430959799[55] = 0;
   out_7432234988430959799[56] = 1;
   out_7432234988430959799[57] = 0;
   out_7432234988430959799[58] = 0;
   out_7432234988430959799[59] = 0;
   out_7432234988430959799[60] = 0;
   out_7432234988430959799[61] = 0;
   out_7432234988430959799[62] = 0;
   out_7432234988430959799[63] = 0;
   out_7432234988430959799[64] = 0;
   out_7432234988430959799[65] = 0;
}
void h_33(double *state, double *unused, double *out_208123134487387152) {
   out_208123134487387152[0] = state[16];
   out_208123134487387152[1] = state[17];
   out_208123134487387152[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7386151575547206179) {
   out_7386151575547206179[0] = 0;
   out_7386151575547206179[1] = 0;
   out_7386151575547206179[2] = 0;
   out_7386151575547206179[3] = 0;
   out_7386151575547206179[4] = 0;
   out_7386151575547206179[5] = 0;
   out_7386151575547206179[6] = 0;
   out_7386151575547206179[7] = 0;
   out_7386151575547206179[8] = 0;
   out_7386151575547206179[9] = 0;
   out_7386151575547206179[10] = 0;
   out_7386151575547206179[11] = 0;
   out_7386151575547206179[12] = 0;
   out_7386151575547206179[13] = 0;
   out_7386151575547206179[14] = 0;
   out_7386151575547206179[15] = 0;
   out_7386151575547206179[16] = 1;
   out_7386151575547206179[17] = 0;
   out_7386151575547206179[18] = 0;
   out_7386151575547206179[19] = 0;
   out_7386151575547206179[20] = 0;
   out_7386151575547206179[21] = 0;
   out_7386151575547206179[22] = 0;
   out_7386151575547206179[23] = 0;
   out_7386151575547206179[24] = 0;
   out_7386151575547206179[25] = 0;
   out_7386151575547206179[26] = 0;
   out_7386151575547206179[27] = 0;
   out_7386151575547206179[28] = 0;
   out_7386151575547206179[29] = 0;
   out_7386151575547206179[30] = 0;
   out_7386151575547206179[31] = 0;
   out_7386151575547206179[32] = 0;
   out_7386151575547206179[33] = 0;
   out_7386151575547206179[34] = 0;
   out_7386151575547206179[35] = 0;
   out_7386151575547206179[36] = 0;
   out_7386151575547206179[37] = 0;
   out_7386151575547206179[38] = 0;
   out_7386151575547206179[39] = 1;
   out_7386151575547206179[40] = 0;
   out_7386151575547206179[41] = 0;
   out_7386151575547206179[42] = 0;
   out_7386151575547206179[43] = 0;
   out_7386151575547206179[44] = 0;
   out_7386151575547206179[45] = 0;
   out_7386151575547206179[46] = 0;
   out_7386151575547206179[47] = 0;
   out_7386151575547206179[48] = 0;
   out_7386151575547206179[49] = 0;
   out_7386151575547206179[50] = 0;
   out_7386151575547206179[51] = 0;
   out_7386151575547206179[52] = 0;
   out_7386151575547206179[53] = 0;
   out_7386151575547206179[54] = 0;
   out_7386151575547206179[55] = 0;
   out_7386151575547206179[56] = 0;
   out_7386151575547206179[57] = 0;
   out_7386151575547206179[58] = 0;
   out_7386151575547206179[59] = 0;
   out_7386151575547206179[60] = 0;
   out_7386151575547206179[61] = 0;
   out_7386151575547206179[62] = 1;
   out_7386151575547206179[63] = 0;
   out_7386151575547206179[64] = 0;
   out_7386151575547206179[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1356256294732298968) {
  H(in_vec, out_1356256294732298968);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_3067371793495545137) {
  err_fun(nom_x, delta_x, out_3067371793495545137);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5834301181090248469) {
  inv_err_fun(nom_x, true_x, out_5834301181090248469);
}
void live_H_mod_fun(double *state, double *out_5519691553496756147) {
  H_mod_fun(state, out_5519691553496756147);
}
void live_f_fun(double *state, double dt, double *out_4962418025735912644) {
  f_fun(state,  dt, out_4962418025735912644);
}
void live_F_fun(double *state, double dt, double *out_7092119509530607508) {
  F_fun(state,  dt, out_7092119509530607508);
}
void live_h_4(double *state, double *unused, double *out_2304202517429654977) {
  h_4(state, unused, out_2304202517429654977);
}
void live_H_4(double *state, double *unused, double *out_4543373436150880457) {
  H_4(state, unused, out_4543373436150880457);
}
void live_h_9(double *state, double *unused, double *out_6924777554652844558) {
  h_9(state, unused, out_6924777554652844558);
}
void live_H_9(double *state, double *unused, double *out_7432234988430959799) {
  H_9(state, unused, out_7432234988430959799);
}
void live_h_10(double *state, double *unused, double *out_7119768345505507454) {
  h_10(state, unused, out_7119768345505507454);
}
void live_H_10(double *state, double *unused, double *out_7764892465746032956) {
  H_10(state, unused, out_7764892465746032956);
}
void live_h_12(double *state, double *unused, double *out_2658616884484351056) {
  h_12(state, unused, out_2658616884484351056);
}
void live_H_12(double *state, double *unused, double *out_6236242323876220667) {
  H_12(state, unused, out_6236242323876220667);
}
void live_h_35(double *state, double *unused, double *out_1101415130013129771) {
  h_35(state, unused, out_1101415130013129771);
}
void live_H_35(double *state, double *unused, double *out_7910035493523487833) {
  H_35(state, unused, out_7910035493523487833);
}
void live_h_32(double *state, double *unused, double *out_2302632350581349354) {
  h_32(state, unused, out_2302632350581349354);
}
void live_H_32(double *state, double *unused, double *out_2310625080656405600) {
  H_32(state, unused, out_2310625080656405600);
}
void live_h_13(double *state, double *unused, double *out_1611300704087694343) {
  h_13(state, unused, out_1611300704087694343);
}
void live_H_13(double *state, double *unused, double *out_4680254586320445968) {
  H_13(state, unused, out_4680254586320445968);
}
void live_h_14(double *state, double *unused, double *out_6924777554652844558) {
  h_14(state, unused, out_6924777554652844558);
}
void live_H_14(double *state, double *unused, double *out_7432234988430959799) {
  H_14(state, unused, out_7432234988430959799);
}
void live_h_33(double *state, double *unused, double *out_208123134487387152) {
  h_33(state, unused, out_208123134487387152);
}
void live_H_33(double *state, double *unused, double *out_7386151575547206179) {
  H_33(state, unused, out_7386151575547206179);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
